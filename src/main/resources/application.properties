# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection


#spring.datasource.url = jdbc:postgresql://localhost:5432/add_app  LOCAL
spring.datasource.url = postgres://klnhbglpcyfysh:f96f67952cc14ee6392d3c36381a563d4ec2430f784d204701c3d4f20c352c08@ec2-54-243-211-197.compute-1.amazonaws.com:5432/d9fg82p9ooaidh
#spring.datasource.username = postgres LOCAL
spring.datasource.username = klnhbglpcyfysh
#spring.datasource.password = jsuqbpy3 LOCAL
spring.datasource.password = f96f67952cc14ee6392d3c36381a563d4ec2430f784d204701c3d4f20c352c08
db.driver: org.postgresql.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect
hibernate.show_sql = true
#//todo change
hibernate.hbm2ddl.auto= update

spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true

# our entities for database
entitymanager.packagesToScan: com.lazermann.AddApplication.model

quartz.enabled=false

server.port = 8081